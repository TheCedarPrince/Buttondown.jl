# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ScheduledEmailsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ScheduledEmailsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ScheduledEmailsApi }) = "http://localhost"

const _returntypes_delete_a_scheduled_email_ScheduledEmailsApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_a_scheduled_email(_api::ScheduledEmailsApi, id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_a_scheduled_email_ScheduledEmailsApi, "/v1/scheduled-emails/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Params:
- id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function delete_a_scheduled_email(_api::ScheduledEmailsApi, id::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_a_scheduled_email(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_a_scheduled_email(_api::ScheduledEmailsApi, response_stream::Channel, id::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_a_scheduled_email(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_all_scheduled_emails_ScheduledEmailsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ListAllScheduledEmails200Response,
)

function _oacinternal_list_all_scheduled_emails(_api::ScheduledEmailsApi; page=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_all_scheduled_emails_ScheduledEmailsApi, "/v1/scheduled-emails", [])
    OpenAPI.Clients.set_param(_ctx.query, "page", page)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""

Params:
- page::Int64

Return: ListAllScheduledEmails200Response, OpenAPI.Clients.ApiResponse
"""
function list_all_scheduled_emails(_api::ScheduledEmailsApi; page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_all_scheduled_emails(_api; page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_all_scheduled_emails(_api::ScheduledEmailsApi, response_stream::Channel; page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_all_scheduled_emails(_api; page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_retrieve_an_existing_scheduled_email_ScheduledEmailsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ScheduledEmail,
)

function _oacinternal_retrieve_an_existing_scheduled_email(_api::ScheduledEmailsApi, id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_retrieve_an_existing_scheduled_email_ScheduledEmailsApi, "/v1/scheduled-emails/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""

Params:
- id::String (required)

Return: ScheduledEmail, OpenAPI.Clients.ApiResponse
"""
function retrieve_an_existing_scheduled_email(_api::ScheduledEmailsApi, id::String; _mediaType=nothing)
    _ctx = _oacinternal_retrieve_an_existing_scheduled_email(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function retrieve_an_existing_scheduled_email(_api::ScheduledEmailsApi, response_stream::Channel, id::String; _mediaType=nothing)
    _ctx = _oacinternal_retrieve_an_existing_scheduled_email(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_schedule_a_new_email_ScheduledEmailsApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => ScheduledEmail,
)

function _oacinternal_schedule_a_new_email(_api::ScheduledEmailsApi; scheduled_email=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_schedule_a_new_email_ScheduledEmailsApi, "/v1/scheduled-emails", [], scheduled_email)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/x-www-form-urlencoded", "multipart/form-data", ] : [_mediaType])
    return _ctx
end

@doc raw"""

Params:
- scheduled_email::ScheduledEmail

Return: ScheduledEmail, OpenAPI.Clients.ApiResponse
"""
function schedule_a_new_email(_api::ScheduledEmailsApi; scheduled_email=nothing, _mediaType=nothing)
    _ctx = _oacinternal_schedule_a_new_email(_api; scheduled_email=scheduled_email, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function schedule_a_new_email(_api::ScheduledEmailsApi, response_stream::Channel; scheduled_email=nothing, _mediaType=nothing)
    _ctx = _oacinternal_schedule_a_new_email(_api; scheduled_email=scheduled_email, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_a_scheduled_email_ScheduledEmailsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ScheduledEmail,
)

function _oacinternal_update_a_scheduled_email(_api::ScheduledEmailsApi, id::String; scheduled_email=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_update_a_scheduled_email_ScheduledEmailsApi, "/v1/scheduled-emails/{id}", [], scheduled_email)
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/x-www-form-urlencoded", "multipart/form-data", ] : [_mediaType])
    return _ctx
end

@doc raw"""

Params:
- id::String (required)
- scheduled_email::ScheduledEmail

Return: ScheduledEmail, OpenAPI.Clients.ApiResponse
"""
function update_a_scheduled_email(_api::ScheduledEmailsApi, id::String; scheduled_email=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_a_scheduled_email(_api, id; scheduled_email=scheduled_email, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_a_scheduled_email(_api::ScheduledEmailsApi, response_stream::Channel, id::String; scheduled_email=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_a_scheduled_email(_api, id; scheduled_email=scheduled_email, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export delete_a_scheduled_email
export list_all_scheduled_emails
export retrieve_an_existing_scheduled_email
export schedule_a_new_email
export update_a_scheduled_email
