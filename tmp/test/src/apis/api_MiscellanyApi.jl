# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct MiscellanyApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `MiscellanyApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ MiscellanyApi }) = "http://localhost"

const _returntypes_ping_MiscellanyApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Any},
)

function _oacinternal_ping(_api::MiscellanyApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_ping_MiscellanyApi, "/v1/ping", [])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""A simple view to let you easily test authentication and health of the API.

Params:

Return: Vector{Any}, OpenAPI.Clients.ApiResponse
"""
function ping(_api::MiscellanyApi; _mediaType=nothing)
    _ctx = _oacinternal_ping(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ping(_api::MiscellanyApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_ping(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export ping
