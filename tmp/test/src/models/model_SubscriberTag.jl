# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SubscriberTag

    SubscriberTag(;
        color=nothing,
        creation_date=nothing,
        description=nothing,
        id=nothing,
        name=nothing,
    )

    - color::String
    - creation_date::ZonedDateTime
    - description::String
    - id::String
    - name::String
"""
Base.@kwdef mutable struct SubscriberTag <: OpenAPI.APIModel
    color::Union{Nothing, String} = nothing
    creation_date::Union{Nothing, ZonedDateTime} = nothing
    description::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function SubscriberTag(color, creation_date, description, id, name, )
        OpenAPI.validate_property(SubscriberTag, Symbol("color"), color)
        OpenAPI.validate_property(SubscriberTag, Symbol("creation_date"), creation_date)
        OpenAPI.validate_property(SubscriberTag, Symbol("description"), description)
        OpenAPI.validate_property(SubscriberTag, Symbol("id"), id)
        OpenAPI.validate_property(SubscriberTag, Symbol("name"), name)
        return new(color, creation_date, description, id, name, )
    end
end # type SubscriberTag

const _property_types_SubscriberTag = Dict{Symbol,String}(Symbol("color")=>"String", Symbol("creation_date")=>"ZonedDateTime", Symbol("description")=>"String", Symbol("id")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ SubscriberTag }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SubscriberTag[name]))}

function check_required(o::SubscriberTag)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SubscriberTag }, name::Symbol, val)
    if name === Symbol("color")
        OpenAPI.validate_param(name, "SubscriberTag", :maxLength, val, 10)
    end
    if name === Symbol("creation_date")
        OpenAPI.validate_param(name, "SubscriberTag", :format, val, "date-time")
    end
    if name === Symbol("id")
        OpenAPI.validate_param(name, "SubscriberTag", :format, val, "uuid")
    end
    if name === Symbol("name")
        OpenAPI.validate_param(name, "SubscriberTag", :maxLength, val, 100)
    end
end
